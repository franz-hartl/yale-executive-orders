# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # Use GitHub's checkout action for the initial checkout
      - name: Checkout
        uses: actions/checkout@v4
      
      # Using a custom node setup script instead of the GitHub action
      - name: Setup Node
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install 18
          nvm use 18
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build site
        run: npm run export
      
      - name: Setup Pages
        uses: ./.github/actions/configure-pages
      
      - name: Upload artifact
        uses: ./.github/actions/upload-pages-artifact
        with:
          path: 'docs'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: ./.github/actions/deploy-pages
        with:
          token: ${{ secrets.GITHUB_TOKEN }}